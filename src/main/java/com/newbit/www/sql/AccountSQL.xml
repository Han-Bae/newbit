<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="aSQL">
	<!-- 자주 사용하는 내용 -->
	<sql id="selCnt">
		SELECT COUNT(*)
		FROM account
	</sql>
	
	<!-- 로그인 확인 -->
	<select id="login" resultType="int" parameterType="aVO">
		<include refid="selCnt" />
		WHERE id = #{id}
			AND isshow = 'Y'
			AND pw = #{pw}
	</select>
	
	<!-- 유저 타입 확인 -->
	<select id="getType" resultType="aVO" parameterType="string">
		SELECT nickname, istype
		FROM account
		WHERE id = #{id}
	</select>
	
<!-- 아이디찾기 관련 -->
	<!-- 아이디 찾기 유저 확인 -->
	<select id = "selFidCnt" resultType="int" parameterType="aVO">
		<include refid="selCnt" />
		WHERE isshow = 'Y'
			AND nickname = #{nickname}
			AND email = #{email}
	</select>
	
	<!-- 아이디 찾기 질의문 -->
	<select id = "selFidID" resultType="string" parameterType="aVO">
		SELECT id
		FROM account
		WHERE isshow = 'Y'
			AND email = #{email}
	</select>
	
<!-- 비밀번호찾기 관련 -->
	<!-- 비밀번호 찾기 유저 확인 -->
	<select id = "selFpwCnt" resultType="int" parameterType="aVO">
		<include refid="selCnt" />
		WHERE isshow = 'Y'
			AND id = #{id}
			AND email = #{email}
	</select>
	
	<!-- 비밀번호 재설정 -->
	<update id="editPW" parameterType="aVO">
		UPDATE	account
		SET		pw = #{pw}
		WHERE	id = #{id}
			AND isshow = 'Y'
	</update>
	
<!-- 회원가입 관련 -->
	<!-- 아이디 중복 확인 -->
	<!-- 아이디확인 -->
	<select id="idCnt" resultType="int" parameterType="string">
		<include refid="selCnt" />
		WHERE isshow='Y'
			AND id = #{id}
	</select>
	<!-- 닉네임 중복 확인 -->
	<select id ="nickCnt" resultType="int" parameterType="string">
		<include refid="selCnt" />
		WHERE isshow='Y'
			AND nickname = #{nickname}
	</select>
	
	<!-- 이메일 중복 확인 -->
	<select id ="emailCnt" resultType="int" parameterType="string">
		SELECT COUNT(*)
		FROM email
		WHERE email = #{email}
			AND isokay = 'Y'
	</select>
	
	<!-- 등록 전 확인 -->
	<select id ="registCk" resultType="int" parameterType="aVO">
		SELECT COUNT(*)
		FROM email
		WHERE email = #{email}
	</select>
	
	<!-- 이메일 등록 질의문 -->
	<insert id="insertMail" parameterType="aVO">
		<selectKey keyProperty="ck_mail" resultType="int" order="BEFORE">
			SELECT NVL(MAX(ck_mail) + 1, 1000) FROM email
		</selectKey>
		INSERT INTO
		    email(email, ck_mail)
		VALUES(
		    #{email}, #{ck_mail}
		)
	</insert>
	
	<!-- 이메일 인증 확인용 -->
	<select id="selCkMail" resultType="int" parameterType="aVO">
		SELECT CK_MAIL
		FROM email
		WHERE isokay='N'
			AND email = #{email}
	</select>
	
	<!-- 확인용으로 이메일 가져오기 -->
	<select id="getEmail" resultType="string" parameterType="aVO">
		SELECT email
		FROM email
		WHERE ck_mail = ${ck_mail}
	</select>
	
	<!-- 이메일 가입 허가 체크 질의문 ('Y'면 이미 가입된 거) -->
	<update id='editOkMail' parameterType="aVO">
		UPDATE EMAIL
		SET isokay = 'Y'
		WHERE email = #{email}	 		
	</update>
		 
	<!-- 이메일 가입 허가 체크 질의문 ('Y'면 이미 가입된 거) -->
	<update id='editNoMail' parameterType="aVO">
		UPDATE EMAIL
		SET isokay = 'N'
		WHERE email = #{email}	 		
	</update>
		 
<!-- 회원가입 -->
	<insert id="insertJoin" parameterType="aVO">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			SELECT NVL(MAX(no) + 1, 1000) FROM account
		</selectKey>
		INSERT INTO
			account(no, id, pw, nickname, email, istype)
		VALUES(
			#{no}, #{id}, #{pw},
			#{nickname}, #{email}, #{istype}
		)
	</insert>
	
<!-- 결제용 회원 정보 확인 -->
	<select id="selAccountInfo" resultType="aVO" parameterType="aVO">
		SELECT nickname, email
		FROM account
		WHERE id = #{id}
	</select>
	
<!-- 해당 유저의 알람 내역 확인 -->
	<select id="getNotice" resultType="nVO" parameterType="string">
		SELECT no, title, body, ischeck
		FROM notice
		WHERE account_no = (
			SELECT no
			FROM account
			WHERE id = #{id}
		)
	</select>
</mapper>